# coding: utf-8

"""
    Developer API

    At Sqala, we believe that everyone deserves access to financial services, and we are committed to providing secure and reliable payment solutions to clients who may have been overlooked by traditional financial institutions.

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from sqala_python_sdk.pydantic.recipient_create_withdrawal_request_bank_account import RecipientCreateWithdrawalRequestBankAccount
from sqala_python_sdk.pydantic.recipient_create_withdrawal_request_metadata import RecipientCreateWithdrawalRequestMetadata

class RecipientCreateWithdrawalRequest(BaseModel):
    # Amount in cents to be transferred.
    amount: int = Field(alias='amount')

    # The method of the withdrawal.
    method: Literal["STANDARD", "PIX"] = Field(alias='method')

    # Unique identifier for the object in your system.
    code: typing.Optional[str] = Field(None, alias='code')

    # The PIX key of the destination bank account. Required if method is PIX
    pix_key: typing.Optional[str] = Field(None, alias='pixKey')

    bank_account: typing.Optional[RecipientCreateWithdrawalRequestBankAccount] = Field(None, alias='bankAccount')

    # The ID of the destination bank account. Required if method is STANDARD.
    bank_account_id: typing.Optional[str] = Field(None, alias='bankAccountId')

    metadata: typing.Optional[RecipientCreateWithdrawalRequestMetadata] = Field(None, alias='metadata')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
