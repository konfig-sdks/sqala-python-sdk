# coding: utf-8

"""
    Developer API

    At Sqala, we believe that everyone deserves access to financial services, and we are committed to providing secure and reliable payment solutions to clients who may have been overlooked by traditional financial institutions.

    The version of the OpenAPI document: 1.0
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from sqala_python_sdk.pydantic.recipient_list_withdrawals_response_data_item_bank_account import RecipientListWithdrawalsResponseDataItemBankAccount
from sqala_python_sdk.pydantic.recipient_list_withdrawals_response_data_item_metadata import RecipientListWithdrawalsResponseDataItemMetadata
from sqala_python_sdk.pydantic.recipient_list_withdrawals_response_data_item_recipient import RecipientListWithdrawalsResponseDataItemRecipient

class RecipientListWithdrawalsResponseDataItem(BaseModel):
    id: typing.Optional[str] = Field(None, alias='id')

    code: typing.Optional[str] = Field(None, alias='code')

    amount: typing.Optional[int] = Field(None, alias='amount')

    method: typing.Optional[str] = Field(None, alias='method')

    status: typing.Optional[str] = Field(None, alias='status')

    created_at: typing.Optional[str] = Field(None, alias='createdAt')

    approved_at: typing.Optional[str] = Field(None, alias='approvedAt')

    rejected_at: typing.Optional[typing.Union[bool, date, datetime, dict, float, int, list, str, None]] = Field(None, alias='rejectedAt')

    paid_at: typing.Optional[str] = Field(None, alias='paidAt')

    failed_at: typing.Optional[typing.Union[bool, date, datetime, dict, float, int, list, str, None]] = Field(None, alias='failedAt')

    pix_key: typing.Optional[typing.Union[bool, date, datetime, dict, float, int, list, str, None]] = Field(None, alias='pixKey')

    bank_account: typing.Optional[RecipientListWithdrawalsResponseDataItemBankAccount] = Field(None, alias='bankAccount')

    recipient: typing.Optional[RecipientListWithdrawalsResponseDataItemRecipient] = Field(None, alias='recipient')

    metadata: typing.Optional[RecipientListWithdrawalsResponseDataItemMetadata] = Field(None, alias='metadata')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
